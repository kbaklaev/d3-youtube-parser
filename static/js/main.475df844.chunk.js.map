{"version":3,"sources":["components/loader/loader.js","components/wtf/wtf.js","components/posts/posts.js","components/buttons/download-button/download-button.js","App.js","serviceWorker.js","index.js"],"names":["Loader","className","WTF","trigger","type","modal","href","alt","target","rel","Posts","posts","length","map","post","index","data","link","key","id","title","url","DowloadButton","buttonStyleToggler","xmlns","viewBox","d","onClick","postsToFile","filter","blob","Blob","join","saveAs","savePosts","IDToFile","match","split","elem","substr","saveID","App","useState","inputState","setInputState","setPosts","loading","setLoading","error","setError","fetch","a","requestPosts","page","newPosts","fetchedData","axios","get","then","forEach","includes","catch","err","placeholder","value","onChange","e","onKeyDown","Boolean","window","location","hostname","customHistory","createBrowserHistory","ReactDOM","render","StrictMode","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"2RAkBeA,G,MAfA,WACb,OACE,yBAAKC,UAAU,8BACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,YACb,8BACA,8BACA,8BACA,mC,OCgBKC,EAxBH,WACV,OACE,kBAAC,IAAD,CAAOC,QAAS,4BAAQC,KAAK,SAASH,UAAU,UAAhC,SAAyDI,OAAK,GAC5E,yBAAKJ,UAAU,8DACb,sDAEE,6BAFF,sCAIE,uBACEK,KAAK,gBACLC,IAAI,QACJC,OAAO,SACPC,IAAI,sBACJR,UAAU,mBALZ,SAJF,iFCiCOS,EAtCD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,yBAAKV,UAAU,wDACK,IAAjBU,EAAMC,QACL,2BAAOX,UAAU,qBACf,+BACE,4BACE,wBAAIA,UAAU,aAAd,KACA,wBAAIA,UAAU,aAAd,SACA,wBAAIA,UAAU,aAAd,SAGJ,+BACGU,EAAME,KACL,SAACC,EAAMC,GAAP,OACED,EAAKE,KAAKC,MACR,wBAAIC,IAAKJ,EAAKK,IACZ,wBAAIlB,UAAU,oBAAoBc,EAAQ,GAC1C,wBAAId,UAAU,oBAAoBa,EAAKE,KAAKI,OAC5C,wBAAInB,UAAU,gCACZ,uBACEK,KAAMQ,EAAKE,KAAKC,KAAKI,IACrBb,OAAO,SACPC,IAAI,uBAHN,iB,QCoDPa,EAtEO,SAAC,GAAe,IAAbX,EAAY,EAAZA,MA8BjBY,EAAuBZ,EAAMC,OAC/B,4KACA,0MAEJ,OACE,kBAAC,IAAD,CACET,QACE,4BAAQF,UAAWsB,EAAoBnB,KAAK,UAC1C,yBACEH,UAAU,wBACVuB,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,+CANZ,YAWFrB,OAAK,GAEL,yBAAKJ,UAAU,8DACb,4BACEG,KAAK,SACLH,UAAU,uJACV0B,QAAS,kBArDC,WAChB,IAAMC,EAAcjB,EACjBkB,QAAO,SAACf,GAAD,OAAUA,EAAKE,KAAKC,QAC3BJ,KAAI,SAACC,GAAD,gBAAaA,EAAKM,MAAlB,cAA6BN,EAAKE,KAAKC,KAAKI,QAC7CS,EAAO,IAAIC,KAAK,CAACH,EAAYI,KAAK,OAAQ,CAC9C5B,KAAM,6BAER6B,iBAAOH,EAAM,aA8CQI,KAHjB,gBAOA,4BACE9B,KAAK,SACLH,UAAU,uJACV0B,QAAS,kBAzCF,WACb,IAAMQ,EAAWxB,EACdkB,QAAO,SAACf,GAAD,OAAUA,EAAKE,KAAKC,QAC3BJ,KAAI,SAACC,GAAD,OAZMO,EAYUP,EAAKE,KAAKC,KAAKI,KAX3Be,MAAM,WACbf,EAAIgB,MAAM,KAAK,GACfhB,EACGgB,MAAM,KACNR,QAAO,SAACS,GAAD,OAAUA,KAAM,GACvBC,OAAO,EAAG,IANL,IAAClB,KAaPS,EAAO,IAAIC,KAAK,CAACI,EAASH,KAAK,MAAO,CAC1C5B,KAAM,6BAER6B,iBAAOH,EAAM,UAkCQU,KAHjB,iBC2BOC,MAjFf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAEaF,mBAAS,IAFtB,mBAEN/B,EAFM,KAECkC,EAFD,OAGiBH,oBAAS,GAH1B,mBAGNI,EAHM,KAGGC,EAHH,OAIaL,oBAAS,GAJtB,mBAINM,EAJM,KAICC,EAJD,KAMPC,EAAK,uCAAG,gCAAAC,EAAA,0DACNR,EAAW/B,OADL,iBAEVqC,GAAS,GACTF,GAAW,GACPK,EAAe,GAJT,IAAAD,EAAA,iBAKDE,GALC,iBAAAF,EAAA,6DAMJG,EAAW,GACXC,EAAc,GAPV,SAQFC,IACHC,IADG,oCAE2Bd,EAF3B,oCAEiEU,IAEpEK,MAAK,SAAC1C,GACLuC,EAAcvC,EAAKA,KAAKL,MACxBK,EAAKA,KAAKL,MAAMgD,SAAQ,SAAC7C,GAErBA,EAAKE,KAAKC,OACTH,EAAKE,KAAKC,KAAKI,IAAIuC,SAAS,gBAC3B9C,EAAKE,KAAKC,KAAKI,IAAIuC,SAAS,eAE9BN,EAAQ,sBAAOA,GAAP,CAAiBxC,WAG9B+C,OAAM,SAACC,GAGN,MAFAb,GAAS,GACTF,GAAW,GACLe,KA1BF,UA4BRV,EAAY,sBAAOA,GAAP,YAAwBE,MAChCC,EAAY3C,OAAS,IA7BjB,4FAKDyC,EAAO,EALN,YAKSA,GAAQ,IALjB,0CAKDA,GALC,sFAKqBA,GAAQ,EAL7B,uBA+BVR,EAASO,GACTL,GAAW,GAhCD,4CAAH,qDA2CX,OACE,yBAAK9C,UAAU,6BACb,yBAAKA,UAAU,uFACb,4BAAQA,UAAU,iDAChB,2BACEA,UAAU,gKACVG,KAAK,OACL2D,YAAY,sBACZC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAOtB,EAAcsB,EAAE1D,OAAOwD,QACxCG,UAAW,SAACD,GAAD,OAjBH,SAACA,GACH,UAAVA,EAAEhD,MACJ2B,EAAS,IACTK,KAcwBiB,CAAUD,MAE9B,4BACEjE,UAAU,8IACVG,KAAK,SACLuB,QAAS,kBAAMuB,MAHjB,YAOA,kBAAC,EAAD,CAAevC,MAAOA,IACtB,yBAAKV,UAAU,gDACb,kBAAC,EAAD,QAGH6C,GAAY,kBAAC,EAAD,MACZE,GAAS,mEACV,kBAAC,EAAD,CAAOrC,MAAOA,OCvEFyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnC,MACvB,2D,mBCTAoC,G,MAAgBC,eAEtBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAQC,QAASL,GACf,kBAAC,EAAD,QAGJM,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxB,MAAK,SAAAyB,GACJA,EAAaC,gBAEdvB,OAAM,SAAAb,GACLqC,QAAQrC,MAAMA,EAAMsC,c","file":"static/js/main.475df844.chunk.js","sourcesContent":["import React from 'react'\r\nimport './loader.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex justify-center h-full\">\r\n      <div className=\"text-center flex content-center flex-wrap\">\r\n        <div className=\"lds-ring\">\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Popup from 'reactjs-popup'\r\n\r\nconst WTF = () => {\r\n  return (\r\n    <Popup trigger={<button type=\"button\" className=\"button\">WTF?!</button>} modal>\r\n      <div className=\"modal border-solid border-2 border-gray-600 rounded-lg p-4\">\r\n        <span>\r\n          What's going on here?\r\n          <br/>\r\n          Enter a subdomain from the site&nbsp;\r\n          <a\r\n            href=\"https://d3.ru\"\r\n            alt=\"d3.ru\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"text-indigo-600\"\r\n          >\r\n            d3.ru\r\n          </a>\r\n          &nbsp;in the input field, click on the YARRR!!! button and magic will happen\r\n        </span>\r\n      </div>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default WTF","import React from \"react\";\r\n\r\nconst Posts = ({ posts }) => {\r\n  return (\r\n    <div className=\"w-auto h-auto overflow-y-auto overflow-x-hidden px-2\">\r\n      {posts.length !== 0 && (\r\n        <table className=\"table-auto w-full\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"px-4 py-2\">#</th>\r\n              <th className=\"px-4 py-2\">Title</th>\r\n              <th className=\"px-4 py-2\">URL</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {posts.map(\r\n              (post, index) =>\r\n                post.data.link && (\r\n                  <tr key={post.id}>\r\n                    <td className=\"border px-4 py-2\">{index + 1}</td>\r\n                    <td className=\"border px-4 py-2\">{post.data.title}</td>\r\n                    <td className=\"border px-4 py-2 text-center\">\r\n                      <a\r\n                        href={post.data.link.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        Link\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst DowloadButton = ({ posts }) => {\r\n  const savePosts = () => {\r\n    const postsToFile = posts\r\n      .filter((post) => post.data.link)\r\n      .map((post) => `${post.title} / ${post.data.link.url}`);\r\n    const blob = new Blob([postsToFile.join(\"\\n\")], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n    saveAs(blob, \"posts.txt\");\r\n  };\r\n\r\n  const getID = (url) => {\r\n    return url.match(\"youtube\")\r\n      ? url.split(\"=\")[1]\r\n      : url\r\n          .split(\"/\")\r\n          .filter((elem) => elem)[2]\r\n          .substr(0, 11);\r\n  };\r\n\r\n  const saveID = () => {\r\n    const IDToFile = posts\r\n      .filter((post) => post.data.link)\r\n      .map((post) => getID(post.data.link.url));\r\n    const blob = new Blob([IDToFile.join(',')], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n    saveAs(blob, \"id.txt\");\r\n  };\r\n\r\n  const buttonStyleToggler = !!posts.length\r\n    ? \"invisible sm:visible mx-4 bg-indigo-500 hover:bg-white text-white font-semibold hover:text-indigo-500 py-2 px-4 border border-indigo-500 rounded inline-flex items-center\"\r\n    : \"invisible sm:visible cursor-not-allowed mx-4 bg-indigo-500 hover:bg-white text-white font-semibold hover:text-indigo-500 py-2 px-4 border border-indigo-500 rounded inline-flex items-center opacity-50\";\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <button className={buttonStyleToggler} type=\"button\">\r\n          <svg\r\n            className=\"fill-current w-4 mr-2\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 25 20\"\r\n          >\r\n            <path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" />\r\n          </svg>\r\n          Download\r\n        </button>\r\n      }\r\n      modal\r\n    >\r\n      <div className=\"modal border-solid border-2 border-gray-600 rounded-lg p-4\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"mx-4 bg-indigo-500 hover:bg-white text-white font-semibold hover:text-indigo-500 py-2 px-4 border border-indigo-500 rounded inline-flex items-center\"\r\n          onClick={() => savePosts()}\r\n        >\r\n          Title / Link\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"mx-4 bg-indigo-500 hover:bg-white text-white font-semibold hover:text-indigo-500 py-2 px-4 border border-indigo-500 rounded inline-flex items-center\"\r\n          onClick={() => saveID()}\r\n        >\r\n          Youtube ID\r\n        </button>\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default DowloadButton;\r\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Loader from \"./components/loader/loader\";\nimport WTF from \"./components/wtf/wtf\";\nimport Posts from \"./components/posts/posts\";\nimport DowloadButton from \"./components/buttons/download-button/download-button\";\n\nfunction App() {\n  const [inputState, setInputState] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetch = async () => {\n    if (!!inputState.length) {\n      setError(false)\n      setLoading(true);\n      let requestPosts = []\n      for (let page = 1; page <= 75; page += 1) {\n        let newPosts = [];\n        let fetchedData = []\n        await axios\n          .get(\n            `https://d3.ru/api/domains/${inputState}/posts/?per_page=42&page=${page}`\n          )\n          .then((data) => {\n            fetchedData = data.data.posts\n            data.data.posts.forEach((post) => {\n              if (\n                post.data.link &&\n                (post.data.link.url.includes(\"youtube.com\") ||\n                  post.data.link.url.includes(\"youtu.be\"))\n              )\n                newPosts = [...newPosts, post];\n            });\n          })\n          .catch((err) => {\n            setError(true);\n            setLoading(false);\n            throw err;\n          });\n        requestPosts = [...requestPosts, ...newPosts];\n        if (fetchedData.length < 42) break;\n      }\n      setPosts(requestPosts);\n      setLoading(false);\n    }\n  };\n\n  const onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      setPosts([]);\n      fetch();\n    }\n  };\n\n  return (\n    <div className=\"h-screen grid grid-cols-5\">\n      <div className=\"col-start-1 col-end-6 xl:col-start-2 xl:col-end-5 p-4 flex flex-col overflow-hidden\">\n        <header className=\"flex p-1 sm:p-2 mb-2 h-18 bg-gray-400 rounded\">\n          <input\n            className=\"mx-0 sm:mx-4 appearance-none border-2 border-gray-500 rounded py-2 px-4 text-gray-800 leading-tight focus:outline-none focus:bg-white focus:border-indigo-500\"\n            type=\"text\"\n            placeholder=\"enter a domain name\"\n            value={inputState}\n            onChange={(e) => setInputState(e.target.value)}\n            onKeyDown={(e) => onKeyDown(e)}\n          />\n          <button\n            className=\"mx-2 sm:mx-4 bg-indigo-500 hover:bg-white text-white font-semibold hover:text-indigo-500 py-2 px-2 sm:px-4 border border-indigo-500 rounded\"\n            type=\"button\"\n            onClick={() => fetch()}\n          >\n            YARRR!!!\n          </button>\n          <DowloadButton posts={posts} />\n          <div className=\"invisible sm:visible w-full flex justify-end\">\n            <WTF />\n          </div>\n        </header>\n        {loading && (<Loader />)}\n        {error && <div>Error. Please, try it again later.</div>}\n        <Posts posts={posts} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router'\r\nimport { createBrowserHistory  } from 'history'\r\n\r\nimport './app.css'\r\n\r\nconst customHistory = createBrowserHistory()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={customHistory}>\r\n      <App />\r\n    </Router>     \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}